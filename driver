import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Polygon;
import java.awt.RenderingHints;
import java.awt.Shape;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.geom.Ellipse2D;
import java.util.ArrayList;

import javax.swing.Timer;
import javax.swing.JFrame;
import javax.swing.JPanel;

public class driver extends JPanel implements ActionListener, MouseListener, KeyListener {
    Timer timer;
    int x = 0;
    int x_vel = 10;
    int y_vel = 10;
    //create a list of asteroids that will hold a and b respectivly
    ArrayList<asteroid> asteroids = new ArrayList<asteroid>();
    asteroid a;
    Ship ship;
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		StartScreen s = new StartScreen(640,480);
		s.showscreen();
		while(s.getcounter()<=0){
			//do nothing
		}
		driver d = new driver();
		d.setup();
		
		
	}

    public void  setup() {
    	//use a list and for loop to make as many asteroids with random x and y as needed
    	for(int i =0; i<10; i++){
    	asteroids.add(a = new asteroid());
    	asteroids.get(i).setx((int)(Math.random()*640));
    	asteroids.get(i).sety((int)(Math.random()*480));
    	asteroids.get(i).setxvel((int)(Math.random()*4)-2);
    	asteroids.get(i).setyvel((int)(Math.random()*4)-2);
    	
    		while(asteroids.get(i).getxvel()==0||asteroids.get(i).getyvel()==0){
    			asteroids.get(i).setxvel((int)(Math.random()*10)-5);
            	asteroids.get(i).setyvel((int)(Math.random()*10)-5);
    		}
    	}
    	//Ship ship = new Ship();
    	
		timer = new Timer(17, this);
        JFrame frame = new JFrame("asteroid");
        frame.setBackground(Color.black);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setResizable(false);
        frame.add(this);
        frame.setSize(640,480);
        frame.setLocationRelativeTo(null);
        frame.setVisible(true);
       // KeyListener listener = new MyKeyListener();
       // frame.addKeyListener(listener);
        timer.start();
    }	
	
	
	
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		repaint();
		for(int i = 0; i<asteroids.size();i++){
			asteroids.get(i).setx(asteroids.get(i).getx()+asteroids.get(i).getxvel());
			asteroids.get(i).sety(asteroids.get(i).gety()+asteroids.get(i).getyvel());
			
			if(asteroids.get(i).getx()>=640-asteroids.get(i).getradius()){
				asteroids.get(i).setx(1+asteroids.get(i).getradius());
				//b.setxvel(b.getxvel()*(-1));//flop it
			}
			
			if(asteroids.get(i).getx()<= 0+asteroids.get(i).getradius()){
				asteroids.get(i).setx(640-asteroids.get(i).getradius());//flop it
			}	
			
			if(asteroids.get(i).gety() >= 480-asteroids.get(i).getradius()){
				asteroids.get(i).sety(1+asteroids.get(i).getradius());
				//b.setyvel(b.getyvel()*(-1));
			}
			if(asteroids.get(i).gety()<=0+asteroids.get(i).getradius()){
				asteroids.get(i).sety(479-asteroids.get(i).getradius());
			}
		}
		//us a for loop to run the code below for every asteroid
		//asteroid a
		//a.setx(a.getx()+a.getxvel());
		//a.sety(a.gety()+a.getyvel());
		
		//if(a.getx()>=640-a.getradius()){
		//	a.setx(1);
			//b.setxvel(b.getxvel()*(-1));//flop it
		//}
		
		//if(a.getx()<= 0){
		//	a.setxvel(a.getxvel()*(-1));//flop it
		//}	
		
		//if(a.gety() >= 480-a.getradius() || a.gety() <=0){
			//a.sety(1);
			//b.setyvel(b.getyvel()*(-1));
		//}
		
		
		
	}
	
	 public void paint(Graphics g) {
	       
		 	//create a for loop to make a bundle of circles
	        super.paintComponent(g);
	        Graphics2D g2 = (Graphics2D) g;
	        g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
	        g2.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, RenderingHints.VALUE_STROKE_PURE);
	        
	        g2.setColor(Color.black);
	        for(int i = 0; i<asteroids.size();i++){

	        	 Ellipse2D.Double shape = new Ellipse2D.Double(asteroids.get(i).getx(), asteroids.get(i).gety(), asteroids.get(i).getradius(), asteroids.get(i).getradius());
	        	    g2.fill(shape); 
	        	//g2.fillOval(asteroids.get(i).getx(), asteroids.get(i).gety(), asteroids.get(i).getradius(), asteroids.get(i).getradius());
	        }
	        //g2.fillOval(b.getx(), b.gety(), b.getradius(), b.getradius());
	        //g2.fillOval(a.getx(), a.gety(), a.getradius(), a.getradius());
	        g2.setColor(Color.green);
	        //g2.fillPolygon(ship.getshipx(), ship.getshipy(), ship.getshipxlength());
	        
	 
	 }
	 

	/*public class MyKeyListener extends Ship implements KeyListener {
		@Override
		public void keyTyped(KeyEvent e) {
			
		}

		@Override
		public void keyPressed(KeyEvent e) {
			System.out.println("keyPressed="+KeyEvent.getKeyText(e.getKeyCode()));
			int key = e.getKeyCode();
			if(key==37) setVelX(-5); setVelY(0);
			if(key==38) setVelY(5); setVelX(0);
			if(key==39) setVelX(5); setVelY(0);
			if(key==40) setVelY(-5); setVelX(0);
		}

		@Override
		public void keyReleased(KeyEvent e) {
			System.out.println("keyReleased="+KeyEvent.getKeyText(e.getKeyCode()));
			int key = e.getKeyCode();
			if(key==37) setVelX(-1);
			if(key==38) setVelY(1);
			if(key==39) setVelX(1);
			if(key==40) setVelY(-1);
			
		}
	}
*/
	@Override
	public void mouseClicked(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mousePressed(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseReleased(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseEntered(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseExited(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void keyPressed(KeyEvent arg0) {
		
		// TODO Auto-generated method stub
		System.out.println("keyPressed="+KeyEvent.getKeyText(arg0.getKeyCode()));
		int key = arg0.getKeyCode();
		if(key==37) ship.setVelX(-5); ship.setVelY(0);
		if(key==38) ship.setVelY(5); ship.setVelX(0);
		if(key==39) ship.setVelX(5); ship.setVelY(0);
		if(key==40) ship.setVelY(-5); ship.setVelX(0);
		
	}

	@Override
	public void keyReleased(KeyEvent arg0) {
		// TODO Auto-generated method stub
		
		System.out.println("keyReleased="+KeyEvent.getKeyText(arg0.getKeyCode()));
		int key = arg0.getKeyCode();
		if(key==37) ship.setVelX(-1);
		if(key==38) ship.setVelY(1);
		if(key==39) ship.setVelX(1);
		if(key==40) ship.setVelY(-1);
		
	}

	@Override
	public void keyTyped(KeyEvent arg0) {
		// TODO Auto-generated method stub
		
	}

}
